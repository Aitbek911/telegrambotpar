import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.utils import executor
import os

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏ ID –∞–¥–º–∏–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID"))

# –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=["start"])
async def start_handler(message: Message):
    user = message.from_user
    user_data = (
        f"üë§ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\n\n"
        f"üÜî ID: {user.id}\n"
        f"üë§ –ò–º—è: {user.first_name}\n"
        f"üîó –ù–∏–∫: @{user.username if user.username else '–Ω–µ—Ç'}\n"
        f"üåê –Ø–∑—ã–∫: {user.language_code}\n"
        f"üìÖ –î–∞—Ç–∞: {message.date.strftime('%Y-%m-%d %H:%M:%S')}"
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É
    await bot.send_message(chat_id=ADMIN_ID, text=user_data)

    # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await message.reply("–°”ô–ª–µ–º! “ö–æ—à –∫–µ–ª–¥—ñ“£ üëã")

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
